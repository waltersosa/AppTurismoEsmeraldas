{"version":3,"file":"primeng-tag.mjs","sources":["../../src/tag/style/tagstyle.ts","../../src/tag/tag.ts","../../src/tag/primeng-tag.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BaseStyle } from 'primeng/base';\n\nconst theme = ({ dt }) => `\n.p-tag {\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    background: ${dt('tag.primary.background')};\n    color: ${dt('tag.primary.color')};\n    font-size: ${dt('tag.font.size')};\n    font-weight: ${dt('tag.font.weight')};\n    padding: ${dt('tag.padding')};\n    border-radius: ${dt('tag.border.radius')};\n    gap: ${dt('tag.gap')};\n}\n\n.p-tag-icon {\n    font-size: ${dt('tag.icon.size')};\n    width: ${dt('tag.icon.size')};\n    height:${dt('tag.icon.size')};\n}\n\n.p-tag-rounded {\n    border-radius: ${dt('tag.rounded.border.radius')};\n}\n\n.p-tag-success {\n    background: ${dt('tag.success.background')};\n    color: ${dt('tag.success.color')};\n}\n\n.p-tag-info {\n    background: ${dt('tag.info.background')};\n    color: ${dt('tag.info.color')};\n}\n\n.p-tag-warn {\n    background: ${dt('tag.warn.background')};\n    color: ${dt('tag.warn.color')};\n}\n\n.p-tag-danger {\n    background: ${dt('tag.danger.background')};\n    color: ${dt('tag.danger.color')};\n}\n\n.p-tag-secondary {\n    background: ${dt('tag.secondary.background')};\n    color: ${dt('tag.secondary.color')};\n}\n\n.p-tag-contrast {\n    background: ${dt('tag.contrast.background')};\n    color: ${dt('tag.contrast.color')};\n}\n`;\n\nconst classes = {\n    root: ({ props }) => [\n        'p-tag p-component',\n        {\n            'p-tag-info': props.severity === 'info',\n            'p-tag-success': props.severity === 'success',\n            'p-tag-warn': props.severity === 'warn',\n            'p-tag-danger': props.severity === 'danger',\n            'p-tag-secondary': props.severity === 'secondary',\n            'p-tag-contrast': props.severity === 'contrast',\n            'p-tag-rounded': props.rounded\n        }\n    ],\n    icon: 'p-tag-icon',\n    label: 'p-tag-label'\n};\n\n@Injectable()\nexport class TagStyle extends BaseStyle {\n    name = 'tag';\n\n    theme = theme;\n\n    classes = classes;\n}\n\n/**\n *\n * Tag component is used to categorize content.\n *\n * [Live Demo](https://www.primeng.org/tag)\n *\n * @module tagstyle\n *\n */\nexport enum TagClasses {\n    /**\n     * Class name of the root element\n     */\n    root = 'p-tag',\n    /**\n     * Class name of the icon element\n     */\n    icon = 'p-tag-icon',\n    /**\n     * Class name of the label element\n     */\n    label = 'p-tag-label'\n}\n\nexport interface TagStyle extends BaseStyle {}\n","import { CommonModule } from '@angular/common';\nimport { booleanAttribute, ChangeDetectionStrategy, Component, inject, Input, NgModule, TemplateRef, ViewEncapsulation } from '@angular/core';\nimport { SharedModule } from 'primeng/api';\nimport { BaseComponent } from 'primeng/basecomponent';\nimport { TagStyle } from './style/tagstyle';\n\n/**\n * Tag component is used to categorize content.\n * @group Components\n */\n@Component({\n    selector: 'p-tag',\n    standalone: true,\n    imports: [CommonModule, SharedModule],\n    template: `\n        <span [ngClass]=\"containerClass()\" [class]=\"styleClass\" [ngStyle]=\"style\">\n            <ng-content></ng-content>\n            <ng-container *ngIf=\"!iconTemplate\">\n                <span class=\"p-tag-icon\" [ngClass]=\"icon\" *ngIf=\"icon\"></span>\n            </ng-container>\n            <span class=\"p-tag-icon\" *ngIf=\"iconTemplate\">\n                <ng-template *ngTemplateOutlet=\"iconTemplate\"></ng-template>\n            </span>\n            <span class=\"p-tag-label\">{{ value }}</span>\n        </span>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    providers: [TagStyle]\n})\nexport class Tag extends BaseComponent {\n    /**\n     * Inline style of the component.\n     * @group Props\n     */\n    @Input() get style(): { [klass: string]: any } | null | undefined {\n        return this._style;\n    }\n    set style(value: { [klass: string]: any } | null | undefined) {\n        this._style = value;\n        this.cd.markForCheck();\n    }\n    /**\n     * Style class of the component.\n     * @group Props\n     */\n    @Input() styleClass: string | undefined;\n    /**\n     * Severity type of the tag.\n     * @group Props\n     */\n    @Input() severity: 'success' | 'secondary' | 'info' | 'warn' | 'danger' | 'contrast' | undefined;\n    /**\n     * Value to display inside the tag.\n     * @group Props\n     */\n    @Input() value: string | undefined;\n    /**\n     * Icon of the tag to display next to the value.\n     * @group Props\n     * @deprecated since 15.4.2. Use 'icon' template.\n     */\n    @Input() icon: string | undefined;\n    /**\n     * Whether the corners of the tag are rounded.\n     * @group Props\n     */\n    @Input({ transform: booleanAttribute }) rounded: boolean | undefined;\n\n    iconTemplate: TemplateRef<any> | undefined;\n\n    _style: { [klass: string]: any } | null | undefined;\n\n    _componentStyle = inject(TagStyle);\n\n    ngAfterContentInit() {\n        this.templates?.forEach((item) => {\n            switch (item.getType()) {\n                case 'icon':\n                    this.iconTemplate = item.template;\n                    break;\n            }\n        });\n    }\n\n    containerClass() {\n        return {\n            'p-tag p-component': true,\n            [`p-tag-${this.severity}`]: this.severity,\n            'p-tag-rounded': this.rounded\n        };\n    }\n}\n\n@NgModule({\n    imports: [Tag, SharedModule],\n    exports: [Tag, SharedModule]\n})\nexport class TagModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}