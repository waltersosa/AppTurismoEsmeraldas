import axios from 'axios';

const BASE_URL = 'http://localhost:3004';
const TOKEN = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2ODZiMDkxMTE3ZmZkMTFjNzFiZDg2MTkiLCJyb2wiOiJ1c3VhcmlvIiwiaWF0IjoxNzUxODQ1MTUwLCJleHAiOjE3NTE4NTIzNTB9.lP3RHydX4_se4m5ORfjOEu35rW9frT7qeTi33XKF1-Y';

const headers = {
  'Authorization': `Bearer ${TOKEN}`,
  'Content-Type': 'application/json'
};

// Funci√≥n para hacer peticiones con manejo de errores
const makeRequest = async (method, url, data = null) => {
  try {
    const config = {
      method,
      url: `${BASE_URL}${url}`,
      headers,
      data
    };
    
    const response = await axios(config);
    console.log(`‚úÖ ${method.toUpperCase()} ${url}:`, response.data);
    return response.data;
  } catch (error) {
    console.error(`‚ùå Error en ${method.toUpperCase()} ${url}:`, {
      status: error.response?.status,
      message: error.response?.data?.message || error.message
    });
    return null;
  }
};

// Funci√≥n para hacer peticiones sin token (p√∫blicas)
const makePublicRequest = async (method, url, data = null) => {
  try {
    const config = {
      method,
      url: `${BASE_URL}${url}`,
      headers: { 'Content-Type': 'application/json' },
      data
    };
    
    const response = await axios(config);
    console.log(`‚úÖ ${method.toUpperCase()} ${url} (p√∫blico):`, response.data);
    return response.data;
  } catch (error) {
    console.error(`‚ùå Error en ${method.toUpperCase()} ${url} (p√∫blico):`, {
      status: error.response?.status,
      message: error.response?.data?.message || error.message
    });
    return null;
  }
};

// Pruebas
const runTests = async () => {
  console.log('üß™ Iniciando pruebas del microservicio de Reviews...\n');

  // 1. Health check
  console.log('1Ô∏è‚É£ Probando health check...');
  await makePublicRequest('GET', '/');
  console.log('');

  // 2. Health check de reviews
  console.log('2Ô∏è‚É£ Probando health check de reviews...');
  await makePublicRequest('GET', '/reviews/health');
  console.log('');

  // 3. Crear una rese√±a (requiere token)
  console.log('3Ô∏è‚É£ Probando crear rese√±a...');
  const reviewData = {
    lugarId: '64f1234567890abcdef12345', // ID de ejemplo
    comentario: 'Excelente lugar tur√≠stico, muy recomendado para visitar con la familia. El paisaje es impresionante y la atenci√≥n es muy buena.',
    calificacion: 5
  };
  await makeRequest('POST', '/reviews/', reviewData);
  console.log('');

  // 4. Obtener rese√±as de un lugar (p√∫blico)
  console.log('4Ô∏è‚É£ Probando obtener rese√±as de un lugar...');
  await makePublicRequest('GET', '/reviews/lugar/64f1234567890abcdef12345');
  console.log('');

  // 5. Obtener rese√±as con par√°metros de paginaci√≥n
  console.log('5Ô∏è‚É£ Probando obtener rese√±as con paginaci√≥n...');
  await makePublicRequest('GET', '/reviews/lugar/64f1234567890abcdef12345?page=1&limit=5&sortBy=fecha&order=desc');
  console.log('');

  console.log('üèÅ Pruebas completadas.');
};

// Ejecutar pruebas
runTests().catch(console.error); 